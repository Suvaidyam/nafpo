[
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<!DOCTYPE html>\n<html>\n<head>\n<title>HTML Tutorial</title>\n</head>\n<body>\n\n    <a href=\"/app/query-report/Received%20Fund%20after%20Due%20Date\" class='card' id=\"fpo_count\"></a>\n\n</body>\n</html>",
  "modified": "2024-06-28 02:37:02.327234",
  "name": "Received Fund after Due Date",
  "private": 0,
  "roles": [],
  "script": "async function callAPI(options) {\n  return new Promise((resolve, reject) => {\n    frappe.call({\n      ...options,\n      callback: async function (response) {\n        resolve(response?.message || response?.value)\n      }\n    });\n  })\n}\n\ncallAPI({\n  method: 'nafpo.apis.api.get_received_fund_after_due_date',\n  freeze: true,\n  freeze_message: __(\"Getting\"),\n}).then(forms_lists => {\n    var fpo_count = root_element.getElementById('fpo_count');\n    fpo_count.innerHTML =  forms_lists !== undefined ? forms_lists : 0;\n});",
  "style": ".card{\n    width:100%;\n    height:100px;\n    background-color:blue;\n    color:white;\n    text-align:center;\n    line-height:100px;\n    font-size:20px;\n}"
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<!DOCTYPE html>\n<html>\n<head>\n<title>HTML Tutorial</title>\n</head>\n<body>\n\n    <a href=\"/app/query-report/Eligible%20but%20haven't%20received%20fund%20yet\" class='card' id=\"fpo_count\"></a>\n\n</body>\n</html>",
  "modified": "2024-06-28 02:41:43.833155",
  "name": "Eligible but haven't received fund yet",
  "private": 0,
  "roles": [],
  "script": "async function callAPI(options) {\n  return new Promise((resolve, reject) => {\n    frappe.call({\n      ...options,\n      callback: async function (response) {\n        resolve(response?.message || response?.value)\n      }\n    });\n  })\n}\n\ncallAPI({\n  method: 'nafpo.apis.api.get_Eligible_but_not_received_fund_yet',\n  freeze: true,\n  freeze_message: __(\"Getting\"),\n}).then(forms_lists => {\n    var fpo_count = root_element.getElementById('fpo_count');\n    fpo_count.innerHTML =  forms_lists !== undefined ? forms_lists : 0;\n});",
  "style": ".card{\n    width:100%;\n    height:100px;\n    background-color:blue;\n    color:white;\n    text-align:center;\n    line-height:100px;\n    font-size:20px;\n}"
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<!DOCTYPE html>\n<html>\n<head>\n<title>HTML Tutorial</title>\n</head>\n<body>\n\n    <a href=\"/app/query-report/Incomplete%20FPO%20Board%20of%20Directors%20Meeting\" class='card' id=\"fpo_count\"></a>\n\n</body>\n</html>",
  "modified": "2024-06-28 04:37:02.625926",
  "name": "Incomplete FPO Board of Directors Meeting",
  "private": 0,
  "roles": [],
  "script": "async function callAPI(options) {\n  return new Promise((resolve, reject) => {\n    frappe.call({\n      ...options,\n      callback: async function (response) {\n        resolve(response?.message || response?.value)\n      }\n    });\n  })\n}\n\ncallAPI({\n  method: 'nafpo.apis.api.get_incomplete_fpo_board_of_directors_meeting_count',\n  freeze: true,\n  freeze_message: __(\"Getting\"),\n}).then(forms_lists => {\n    var fpo_count = root_element.getElementById('fpo_count');\n    fpo_count.innerHTML =  forms_lists !== undefined ? forms_lists : 0;\n});",
  "style": ".card{\n    width:100%;\n    height:100px;\n    background-color:blue;\n    color:white;\n    text-align:center;\n    line-height:100px;\n    font-size:20px;\n}"
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<!DOCTYPE html>\n<html>\n<head>\n<title>HTML Tutorial</title>\n</head>\n<body>\n\n    <a href=\"/app/query-report/Total%20Eligible%20FPOs\" class='card' id=\"fpo_count\"><p>Total Eligible FPOs</p></a>\n\n</body>\n</html>",
  "modified": "2024-06-28 02:26:09.181971",
  "name": "Total Eligible FPOs",
  "private": 0,
  "roles": [],
  "script": "async function callAPI(options) {\n  return new Promise((resolve, reject) => {\n    frappe.call({\n      ...options,\n      callback: async function (response) {\n        resolve(response?.message || response?.value)\n      }\n    });\n  })\n}\n\ncallAPI({\n  method: 'nafpo.apis.api.get_total_eligible_fpos_count',\n  freeze: true,\n  freeze_message: __(\"Getting\"),\n}).then(forms_lists => {\n    var fpo_count = root_element.getElementById('fpo_count');\n    fpo_count.innerHTML =  forms_lists !== undefined ? forms_lists : 0;\n});",
  "style": ".card{\n    width:100%;\n    height:100px;\n    background-color:blue;\n    color:white;\n    text-align:center;\n    line-height:100px;\n    font-size:20px;\n}"
 },
 {
  "docstatus": 0,
  "doctype": "Custom HTML Block",
  "html": "<!DOCTYPE html>\n<html>\n<head>\n<title>HTML Tutorial</title>\n</head>\n<body>\n\n    <a href=\"/app/query-report/Received%20Fund%20before%20or%20on%20due%20date\" class='card' id=\"fpo_count\"></a>\n\n</body>\n</html>",
  "modified": "2024-06-28 02:41:06.017923",
  "name": "Received Fund before or on due date",
  "private": 0,
  "roles": [],
  "script": "async function callAPI(options) {\n  return new Promise((resolve, reject) => {\n    frappe.call({\n      ...options,\n      callback: async function (response) {\n        resolve(response?.message || response?.value)\n      }\n    });\n  })\n}\n\ncallAPI({\n  method: 'nafpo.apis.api.get_received_fund_before_or_on_due_date',\n  freeze: true,\n  freeze_message: __(\"Getting\"),\n}).then(forms_lists => {\n    var fpo_count = root_element.getElementById('fpo_count');\n    fpo_count.innerHTML =  forms_lists !== undefined ? forms_lists : 0;\n});",
  "style": ".card{\n    width:100%;\n    height:100px;\n    background-color:blue;\n    color:white;\n    text-align:center;\n    line-height:100px;\n    font-size:20px;\n}"
 }
]